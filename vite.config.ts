//----------------------------------------------------------------------------------------------------------------------

import path from 'node:path';

import { defineConfig } from 'vite';
import vue from '@vitejs/plugin-vue';
import dts from 'vite-plugin-dts';

//----------------------------------------------------------------------------------------------------------------------

export default defineConfig((configEnv) =>
{
    const pluginsConfig = [
        vue(),
        dts({ rollupTypes: true })
    ];

    const resolveConfig = {
        alias: {
            '~bootstrap': path.resolve(__dirname, 'node_modules/bootstrap')
        }
    };

    const serverConfig = {
        port: 9100,
        hmr: {
            host: 'localhost',
            protocol: 'ws'
        }
    };

    if(configEnv.mode === 'development')
    {
        return {
            root: 'src/demo',
            plugins: pluginsConfig,
            resolve: resolveConfig,
            server: serverConfig,
            build: {}
        };
    }
    else
    {
        return {
            plugins: pluginsConfig,
            resolve: resolveConfig,
            server: serverConfig,
            build: {
                lib: {
                    entry: path.resolve(__dirname, 'src/lib.ts'),
                    name: 'vue-bootstrap-autocomplete',
                    formats: [ 'es', 'umd' ],
                    fileName: (format) => `vue-bootstrap-autocomplete.${ format }.js`
                },
                rollupOptions: {
                    external: [ 'vue', /bootstrap\/.+/ ],
                    output: {
                        exports: 'named',
                        globals: {
                            vue: 'Vue'
                        }
                    }
                },
                emptyOutDir: false // to retain the types folder generated by tsc
            }
        };
    }
});
